@use '../variables' as *;
@use '../breakpoints';

.requirements {
  // Fade to black where the atmosphere image starts to come in
  // Since the aspect-ratio of the earth image is 2 / 1, transition to black
  // at 50vw which will be the height of the image
  background-image: linear-gradient(to bottom, transparent, black 50vw);

  display: grid;
  max-width: 100vw;
  min-width: 0;
  margin-top: -10rem;
  gap: var(--s2);
  isolation: isolate;
  // font-size: var(--s1);
  padding-inline: var(--s0);
  grid-template-areas:
    'header'
    'one'
    'two'
    'image'
    'three'
    'four'
    'footer';
  @include breakpoints.medium {
    padding-inline: var(--s1);
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas:
      'header header'
      'one    one'
      'two    image'
      'three  three'
      'four   four'
      'footer footer';
  }
  @include breakpoints.large {
    padding-inline: var(--s2);
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas:
      'header header header'
      'one    one    one'
      'two    image  three'
      'two    image  four'
      'footer footer footer';
  }

  h3::before {
    content: '';
    background: center no-repeat url(Img/atmosphere.png);
    background-size: contain;
    aspect-ratio: 2 / 1;
    grid-area: image;
    display: block;
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    max-width: 100vw;
    object-fit: contain;
    object-position: center;
    flex: 1 1 auto;
  }

  h3 {
    grid-area: header;
    text-align: center;
    font-size: var(--s2);
    // The container has inline padding, using a negative margin pushes it out to full width
    margin-inline: calc(0px - var(--s0));
    @include breakpoints.medium {
      margin-inline: calc(0px - var(--s1));
      font-size: var(--s3);
    }
    @include breakpoints.large {
      margin-inline: calc(0px - var(--s2));
    }
  }

  p {
    text-align: justify;
    max-width: 60ch;
    margin-inline: auto;
    // font-size: var(--s0);
    font-size: 1.2rem;

    @include breakpoints.medium {
      font-size: var(--s1);
    }
  }

  $areas: (
    1: one,
    2: two,
    3: three,
    4: four,
    5: footer,
  );

  @each $child, $area in $areas {
    p:nth-of-type(#{$child}) {
      grid-area: $area;
    }
  }

  p:nth-of-type(5) {
    font-size: var(--s0);
    font-style: italic;
    max-width: 100%;
  }

  &::before {
    content: '';
    width: 100%;
    height: 100%;
    min-width: 300px;
    min-height: 300px;
    max-width: 450px;
    max-height: 450px;
    background: content-box center no-repeat url(Img/window-back.png);
    background-size: contain;
    grid-area: image;
    animation: spin 240s infinite linear reverse;
    z-index: -1;
    justify-self: center;
    align-self: center;
  }

  &::after {
    content: '';
    width: 100%;
    height: 100%;
    min-width: 300px;
    min-height: 300px;
    max-width: 450px;
    max-height: 450px;
    background: content-box center no-repeat url(Img/window-front.png);
    background-size: contain;
    grid-area: image;
    animation: spin 120s infinite linear;
    z-index: -1;
    justify-self: center;
    align-self: center;
  }
}
